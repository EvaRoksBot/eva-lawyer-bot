// Unified Menu System - –ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é Eva Lawyer Bot
// –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –º–µ–Ω—é –º–æ–¥—É–ª–∏ –≤ –µ–¥–∏–Ω—É—é –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É

class UnifiedMenuSystem {
    constructor() {
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        this.userStates = new Map();
        this.navigationHistory = new Map();
        this.userPreferences = new Map();
        
        // –ö—ç—à –º–µ–Ω—é
        this.menuCache = new Map();
        this.cacheTimeout = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç
        
        // –ú–µ—Ç—Ä–∏–∫–∏
        this.metrics = {
            menuViews: new Map(),
            buttonClicks: new Map(),
            navigationPaths: new Map(),
            userSessions: new Map()
        };
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é —Å—Ç—Ä—É–∫—Ç—É—Ä
        this.initializeMenuStructures();
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä –º–µ–Ω—é
    initializeMenuStructures() {
        this.menuStructures = {
            main: {
                id: 'main',
                title: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                type: 'main',
                buttons: [
                    [
                        { text: 'üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', callback_data: 'consultation_menu', icon: 'üí¨' },
                        { text: 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã', callback_data: 'documents_menu', icon: 'üìÑ' }
                    ],
                    [
                        { text: 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∏', callback_data: 'checks_menu', icon: 'üîç' },
                        { text: '‚öñÔ∏è –£—Å–ª—É–≥–∏', callback_data: 'services_menu', icon: '‚öñÔ∏è' }
                    ],
                    [
                        { text: 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', callback_data: 'analytics_menu', icon: 'üìä' },
                        { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings_menu', icon: '‚öôÔ∏è' }
                    ],
                    [
                        { text: 'üÜò –ü–æ–º–æ—â—å', callback_data: 'help_menu', icon: 'üÜò' }
                    ]
                ]
            },
            
            consultation: {
                id: 'consultation_menu',
                title: 'üí¨ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏',
                type: 'submenu',
                parent: 'main',
                buttons: [
                    [
                        { text: 'üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ', callback_data: 'consult_corporate', specialty: 'corporate' },
                        { text: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ', callback_data: 'consult_family', specialty: 'family' }
                    ],
                    [
                        { text: 'üè† –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', callback_data: 'consult_realestate', specialty: 'realestate' },
                        { text: 'üíº –¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ', callback_data: 'consult_labor', specialty: 'labor' }
                    ],
                    [
                        { text: 'üí∞ –ù–∞–ª–æ–≥–æ–≤–æ–µ –ø—Ä–∞–≤–æ', callback_data: 'consult_tax', specialty: 'tax' },
                        { text: '‚öñÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ', callback_data: 'consult_admin', specialty: 'admin' }
                    ],
                    [
                        { text: '‚ùì –û–±—â–∏–π –≤–æ–ø—Ä–æ—Å', callback_data: 'consult_general', specialty: 'general' },
                        { text: 'üö® –°—Ä–æ—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', callback_data: 'consult_urgent', specialty: 'urgent', priority: 'high' }
                    ],
                    [
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main' }
                    ]
                ]
            },
            
            documents: {
                id: 'documents_menu',
                title: 'üìÑ –†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏',
                type: 'submenu',
                parent: 'main',
                buttons: [
                    [
                        { text: 'üìã –ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞', callback_data: 'doc_analyze_contract', action: 'analyze' },
                        { text: 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∏—Å–∫–æ–≤', callback_data: 'doc_check_risks', action: 'check_risks' }
                    ],
                    [
                        { text: 'üìù –°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç', callback_data: 'doc_create', action: 'create' },
                        { text: '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data: 'doc_edit', action: 'edit' }
                    ],
                    [
                        { text: 'üìä –°—Ä–∞–≤–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã', callback_data: 'doc_compare', action: 'compare' },
                        { text: 'üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è', callback_data: 'doc_compliance', action: 'compliance' }
                    ],
                    [
                        { text: 'üìÅ –ú–æ–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã', callback_data: 'doc_my_documents', action: 'list' },
                        { text: 'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª', callback_data: 'doc_upload', action: 'upload' }
                    ],
                    [
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main' }
                    ]
                ]
            },
            
            checks: {
                id: 'checks_menu',
                title: 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø–æ–∏—Å–∫',
                type: 'submenu',
                parent: 'main',
                buttons: [
                    [
                        { text: 'üè¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ò–ù–ù', callback_data: 'check_inn_form', service: 'dadata' },
                        { text: 'üìã –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –û–ì–†–ù', callback_data: 'check_ogrn', service: 'dadata' }
                    ],
                    [
                        { text: '‚öñÔ∏è –°—É–¥–µ–±–Ω—ã–µ –¥–µ–ª–∞', callback_data: 'check_court_cases', service: 'court' },
                        { text: 'üìä –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ', callback_data: 'check_financial', service: 'finance' }
                    ],
                    [
                        { text: 'üîç –ü–æ–∏—Å–∫ –ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç–æ–≤', callback_data: 'search_precedents', service: 'legal_search' },
                        { text: 'üìú –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–π', callback_data: 'check_licenses', service: 'licenses' }
                    ],
                    [
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main' }
                    ]
                ]
            },
            
            services: {
                id: 'services_menu',
                title: '‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏',
                type: 'submenu',
                parent: 'main',
                buttons: [
                    [
                        { text: 'üìù –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤', callback_data: 'service_contracts', service_type: 'contracts' },
                        { text: '‚öñÔ∏è –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤ —Å—É–¥–µ', callback_data: 'service_court', service_type: 'court' }
                    ],
                    [
                        { text: 'üè¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞', callback_data: 'service_registration', service_type: 'registration' },
                        { text: 'üí∞ –ù–∞–ª–æ–≥–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', callback_data: 'service_tax_planning', service_type: 'tax' }
                    ],
                    [
                        { text: 'üîí –ó–∞—â–∏—Ç–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏', callback_data: 'service_ip', service_type: 'ip' }
                    ],
                    [
                        { text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —é—Ä–∏—Å—Ç–æ–º', callback_data: 'contact_lawyer', action: 'contact' },
                        { text: 'üí¨ –û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', callback_data: 'online_consultation', action: 'online' }
                    ],
                    [
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main' }
                    ]
                ]
            },
            
            analytics: {
                id: 'analytics_menu',
                title: 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã',
                type: 'submenu',
                parent: 'main',
                buttons: [
                    [
                        { text: 'üìà –ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', callback_data: 'analytics_consultations', type: 'consultations' },
                        { text: 'üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã', callback_data: 'analytics_documents', type: 'documents' }
                    ],
                    [
                        { text: 'üè¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏', callback_data: 'analytics_companies', type: 'companies' },
                        { text: '‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–æ–≤', callback_data: 'analytics_response_time', type: 'performance' }
                    ],
                    [
                        { text: 'üìä –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–∞—à–±–æ—Ä–¥', callback_data: 'personal_dashboard', type: 'dashboard' },
                        { text: 'üìã –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', callback_data: 'export_data', action: 'export' }
                    ],
                    [
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main' }
                    ]
                ]
            },
            
            settings: {
                id: 'settings_menu',
                title: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                type: 'submenu',
                parent: 'main',
                buttons: [
                    [
                        { text: 'üë§ –ü—Ä–æ—Ñ–∏–ª—å', callback_data: 'settings_profile', section: 'profile' },
                        { text: 'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data: 'settings_notifications', section: 'notifications' }
                    ],
                    [
                        { text: 'üé® –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è', callback_data: 'settings_personalization', section: 'personalization' },
                        { text: 'üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', callback_data: 'settings_security', section: 'security' }
                    ],
                    [
                        { text: 'üì± –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏', callback_data: 'settings_integrations', section: 'integrations' },
                        { text: 'üìä –≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫', callback_data: 'settings_export', action: 'export' }
                    ],
                    [
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main' }
                    ]
                ]
            },
            
            help: {
                id: 'help_menu',
                title: 'üÜò –ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                type: 'submenu',
                parent: 'main',
                buttons: [
                    [
                        { text: 'üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', callback_data: 'help_guide', type: 'guide' },
                        { text: '‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', callback_data: 'help_faq', type: 'faq' }
                    ],
                    [
                        { text: 'üé• –í–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', callback_data: 'help_videos', type: 'videos' },
                        { text: 'üìû –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data: 'help_support', type: 'support' }
                    ],
                    [
                        { text: 'üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', callback_data: 'help_feedback', action: 'feedback' },
                        { text: 'üêõ –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ', callback_data: 'help_bug_report', action: 'bug_report' }
                    ],
                    [
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'main' }
                    ]
                ]
            }
        };
    }

    // –ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π
    getMenu(userId, menuId = 'main', context = {}) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
            const cacheKey = `${userId}_${menuId}_${JSON.stringify(context)}`;
            if (this.menuCache.has(cacheKey)) {
                const cached = this.menuCache.get(cacheKey);
                if (Date.now() - cached.timestamp < this.cacheTimeout) {
                    return cached.menu;
                }
            }

            // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤–æ–µ –º–µ–Ω—é
            const baseMenu = this.menuStructures[menuId] || this.menuStructures.main;
            
            // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω—é
            const personalizedMenu = this.personalizeMenu(userId, baseMenu, context);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            const menuWithNavigation = this.addNavigation(userId, personalizedMenu);
            
            // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.menuCache.set(cacheKey, {
                menu: menuWithNavigation,
                timestamp: Date.now()
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
            this.updateMenuMetrics(userId, menuId);
            
            return menuWithNavigation;
            
        } catch (error) {
            console.error('Error getting menu:', error);
            return this.getDefaultMenu();
        }
    }

    // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    personalizeMenu(userId, baseMenu, context) {
        const userState = this.getUserState(userId);
        const preferences = this.getUserPreferences(userId);
        
        // –ö–ª–æ–Ω–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ –º–µ–Ω—é
        const menu = JSON.parse(JSON.stringify(baseMenu));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        menu.text = this.generatePersonalizedText(userId, menu, context);
        
        // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        menu.buttons = this.personalizeButtons(userId, menu.buttons, preferences);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        if (menu.id === 'main') {
            menu.buttons = this.addQuickActions(userId, menu.buttons, userState);
        }
        
        return menu;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    generatePersonalizedText(userId, menu, context) {
        const userState = this.getUserState(userId);
        const currentTime = new Date();
        const hour = currentTime.getHours();
        
        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
        let greeting = '';
        if (hour < 6) greeting = 'üåô –î–æ–±—Ä–æ–π –Ω–æ—á–∏';
        else if (hour < 12) greeting = 'üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ';
        else if (hour < 18) greeting = '‚òÄÔ∏è –î–æ–±—Ä—ã–π –¥–µ–Ω—å';
        else greeting = 'üåÜ –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä';
        
        // –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ
        const name = userState.firstName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        
        let text = `${greeting}, ${name}!\n\n`;
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        switch (menu.id) {
            case 'main':
                text += `ü§ñ <b>Eva Lawyer Bot</b> - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç\n\n`;
                text += `üìä <b>–í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>\n`;
                text += `‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: ${userState.consultationsCount || 0}\n`;
                text += `‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${userState.documentsCount || 0}\n`;
                text += `‚Ä¢ –ö–æ–º–ø–∞–Ω–∏–π –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${userState.checksCount || 0}\n\n`;
                text += `–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:`;
                break;
                
            case 'consultation_menu':
                text += `üí¨ <b>–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</b>\n\n`;
                text += `–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –ø—Ä–∞–≤–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:`;
                break;
                
            case 'documents_menu':
                text += `üìÑ <b>–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏</b>\n\n`;
                text += `–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`;
                break;
                
            default:
                text += `${menu.title}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:`;
        }
        
        return text;
    }

    // –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫
    personalizeButtons(userId, buttons, preferences) {
        const userState = this.getUserState(userId);
        
        return buttons.map(row => {
            return row.map(button => {
                // –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                const usage = this.metrics.buttonClicks.get(`${userId}_${button.callback_data}`) || 0;
                
                // –í—ã–¥–µ–ª—è–µ–º —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏
                if (usage > 5) {
                    button.text = `‚≠ê ${button.text}`;
                }
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
                if (this.isNewFeature(button.callback_data)) {
                    button.text = `üÜï ${button.text}`;
                }
                
                return button;
            });
        });
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    addQuickActions(userId, buttons, userState) {
        const quickActions = this.getQuickActions(userId, userState);
        
        if (quickActions.length > 0) {
            // –î–æ–±–∞–≤–ª—è–µ–º –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –Ω–∞—á–∞–ª–æ
            buttons.unshift([{ text: '‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è', callback_data: 'quick_actions_menu' }]);
        }
        
        return buttons;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getQuickActions(userId, userState) {
        const actions = [];
        
        // –ù–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        const recentActions = this.getRecentActions(userId);
        
        // –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        if (recentActions.includes('consult_corporate')) {
            actions.push({ text: 'üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', callback_data: 'consult_corporate' });
        }
        
        if (recentActions.includes('check_inn_form')) {
            actions.push({ text: 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ò–ù–ù', callback_data: 'check_inn_form' });
        }
        
        if (recentActions.includes('doc_analyze_contract')) {
            actions.push({ text: 'üìã –ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞', callback_data: 'doc_analyze_contract' });
        }
        
        // –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        const currentTime = new Date();
        const hour = currentTime.getHours();
        
        // –†–∞–±–æ—á–∏–µ —á–∞—Å—ã - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–≤—è–∑–∞—Ç—å—Å—è —Å —é—Ä–∏—Å—Ç–æ–º
        if (hour >= 9 && hour <= 18) {
            actions.push({ text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å —é—Ä–∏—Å—Ç–æ–º', callback_data: 'contact_lawyer' });
        }
        
        return actions.slice(0, 4); // –ú–∞–∫—Å–∏–º—É–º 4 –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    addNavigation(userId, menu) {
        const history = this.getNavigationHistory(userId);
        
        // –î–æ–±–∞–≤–ª—è–µ–º breadcrumb –Ω–∞–≤–∏–≥–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–º–µ–Ω—é
        if (menu.parent && history.length > 1) {
            const breadcrumb = this.generateBreadcrumb(history);
            menu.text = `${breadcrumb}\n\n${menu.text}`;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if (menu.parent && !this.hasBackButton(menu.buttons)) {
            menu.buttons.push([{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: menu.parent }]);
        }
        
        return menu;
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è breadcrumb –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    generateBreadcrumb(history) {
        const breadcrumbs = history.slice(-3).map(item => {
            const menuTitle = this.menuStructures[item.menuId]?.title || item.menuId;
            return menuTitle.replace(/[üè†üí¨üìÑüîç‚öñÔ∏èüìä‚öôÔ∏èüÜò]/g, '').trim();
        });
        
        return `üìç ${breadcrumbs.join(' ‚Üí ')}`;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    hasBackButton(buttons) {
        return buttons.some(row => 
            row.some(button => 
                button.text.includes('–ù–∞–∑–∞–¥') || button.callback_data === 'back'
            )
        );
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ–Ω—é
    handleMenuNavigation(userId, callbackData, messageId) {
        try {
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            this.updateNavigationHistory(userId, callbackData);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.updateUserState(userId, { lastMenuAction: callbackData });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
            this.updateNavigationMetrics(userId, callbackData);
            
            // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
            const menu = this.getMenu(userId, callbackData);
            
            return {
                text: menu.text,
                reply_markup: {
                    inline_keyboard: menu.buttons
                },
                parse_mode: 'HTML'
            };
            
        } catch (error) {
            console.error('Error handling menu navigation:', error);
            return this.getErrorMenu();
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserState(userId) {
        if (!this.userStates.has(userId)) {
            this.userStates.set(userId, {
                firstName: '',
                lastActivity: Date.now(),
                consultationsCount: 0,
                documentsCount: 0,
                checksCount: 0,
                preferences: {},
                level: 'beginner' // beginner, intermediate, expert
            });
        }
        return this.userStates.get(userId);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserPreferences(userId) {
        if (!this.userPreferences.has(userId)) {
            this.userPreferences.set(userId, {
                language: 'ru',
                theme: 'default',
                notifications: true,
                quickActions: true,
                expertMode: false
            });
        }
        return this.userPreferences.get(userId);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUserState(userId, updates) {
        const currentState = this.getUserState(userId);
        const newState = { ...currentState, ...updates, lastActivity: Date.now() };
        this.userStates.set(userId, newState);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    getNavigationHistory(userId) {
        if (!this.navigationHistory.has(userId)) {
            this.navigationHistory.set(userId, [{ menuId: 'main', timestamp: Date.now() }]);
        }
        return this.navigationHistory.get(userId);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    updateNavigationHistory(userId, menuId) {
        const history = this.getNavigationHistory(userId);
        history.push({ menuId, timestamp: Date.now() });
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 10 –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
        if (history.length > 10) {
            history.shift();
        }
        
        this.navigationHistory.set(userId, history);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–¥–∞–≤–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    getRecentActions(userId) {
        const history = this.getNavigationHistory(userId);
        return history.slice(-5).map(item => item.menuId);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    isNewFeature(callbackData) {
        const newFeatures = [
            'analytics_menu',
            'personal_dashboard',
            'service_ip',
            'check_financial'
        ];
        return newFeatures.includes(callbackData);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –º–µ–Ω—é
    updateMenuMetrics(userId, menuId) {
        const key = `${userId}_${menuId}`;
        const current = this.metrics.menuViews.get(key) || 0;
        this.metrics.menuViews.set(key, current + 1);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    updateNavigationMetrics(userId, callbackData) {
        const key = `${userId}_${callbackData}`;
        const current = this.metrics.buttonClicks.get(key) || 0;
        this.metrics.buttonClicks.set(key, current + 1);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–Ω—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    getDefaultMenu() {
        return {
            text: 'üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
            buttons: [
                [
                    { text: 'üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', callback_data: 'consultation_menu' },
                    { text: 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã', callback_data: 'documents_menu' }
                ],
                [
                    { text: 'üÜò –ü–æ–º–æ—â—å', callback_data: 'help_menu' }
                ]
            ]
        };
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–Ω—é –æ—à–∏–±–∫–∏
    getErrorMenu() {
        return {
            text: '‚ùå <b>–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</b>\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
            buttons: [
                [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main' }],
                [{ text: 'üÜò –ü–æ–º–æ—â—å', callback_data: 'help_menu' }]
            ]
        };
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–µ–Ω—é
    getMenuStatistics(userId = null) {
        if (userId) {
            // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const userViews = new Map();
            const userClicks = new Map();
            
            for (const [key, value] of this.metrics.menuViews) {
                if (key.startsWith(`${userId}_`)) {
                    const menuId = key.replace(`${userId}_`, '');
                    userViews.set(menuId, value);
                }
            }
            
            for (const [key, value] of this.metrics.buttonClicks) {
                if (key.startsWith(`${userId}_`)) {
                    const action = key.replace(`${userId}_`, '');
                    userClicks.set(action, value);
                }
            }
            
            return { views: userViews, clicks: userClicks };
        } else {
            // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            return {
                totalViews: this.metrics.menuViews.size,
                totalClicks: this.metrics.buttonClicks.size,
                activeUsers: this.userStates.size,
                cacheHitRate: this.calculateCacheHitRate()
            };
        }
    }

    // –†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –ø–æ–ø–∞–¥–∞–Ω–∏–π –≤ –∫—ç—à
    calculateCacheHitRate() {
        // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è - –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
        return this.menuCache.size > 0 ? 0.85 : 0;
    }

    // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    clearCache() {
        this.menuCache.clear();
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–µ–Ω—é
    exportMenuConfiguration() {
        return {
            structures: this.menuStructures,
            timestamp: Date.now(),
            version: '1.0'
        };
    }
}

module.exports = UnifiedMenuSystem;

