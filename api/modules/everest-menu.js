// Everest Menu Framework for Eva Lawyer Bot
// Adapted from aiogram specification to Node.js

// Callback data helper (max 64 bytes)
function cb(route) {
    return route.slice(0, 64);
}

// Main Everest menu structure
function getMainMenu() {
    return {
        inline_keyboard: [
            [
                { text: "üßæ –î–æ–≥–æ–≤–æ—Ä—ã", callback_data: cb("eva:contracts:menu") },
                { text: "üìö –ü–∞–∫–µ—Ç ¬´–≠–≤–µ—Ä–µ—Å—Ç¬ª", callback_data: cb("eva:pkg:menu") }
            ],
            [
                { text: "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ (–ò–ù–ù)", callback_data: cb("eva:inn:prompt") }
            ],
            [
                { text: "üí≥ –°—á—ë—Ç/–∞–∫—Ç—ã", callback_data: cb("eva:docs:billing") },
                { text: "üìà –°—Ç–∞—Ç—É—Å—ã –∏ –æ—Ç—á—ë—Ç—ã", callback_data: cb("eva:reports:menu") }
            ],
            [
                { text: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data: cb("eva:settings:menu") },
                { text: "üÜò –ü–æ–º–æ—â—å", callback_data: cb("eva:help:menu") }
            ]
        ]
    };
}

// Contracts submenu
function getContractsMenu() {
    return {
        inline_keyboard: [
            [
                { text: "–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data: cb("eva:contracts:analyze") }
            ],
            [
                { text: "–í—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∫–∏ (—Ä–µ–¥–ª–∞–π–Ω)", callback_data: cb("eva:contracts:redline") }
            ],
            [
                { text: "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏–π", callback_data: cb("eva:contracts:protocol") }
            ],
            [
                { text: "–í—ã—Ç–∞—â–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã/—Ä–∏—Å–∫–∏", callback_data: cb("eva:contracts:extract") }
            ],
            [
                { text: "‚Üê –ù–∞–∑–∞–¥", callback_data: cb("eva:home") }
            ]
        ]
    };
}

// Everest package submenu
function getEverestPackageMenu() {
    return {
        inline_keyboard: [
            [
                { text: "–î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏ (—à–∞–±–ª–æ–Ω)", callback_data: cb("eva:pkg:supply") }
            ],
            [
                { text: "–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è", callback_data: cb("eva:pkg:spec") }
            ],
            [
                { text: "–ü—Ä–æ—Ç–æ–∫–æ–ª —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏–π", callback_data: cb("eva:pkg:prot") }
            ],
            [
                { text: "–°–±–æ—Ä–∫–∞ –∫–æ–º–ø–ª–µ–∫—Ç–∞ (3 –≤ 1)", callback_data: cb("eva:pkg:wizard") }
            ],
            [
                { text: "‚Üê –ù–∞–∑–∞–¥", callback_data: cb("eva:home") }
            ]
        ]
    };
}

// INN check submenu
function getINNMenu() {
    return {
        inline_keyboard: [
            [
                { text: "–í–≤–µ—Å—Ç–∏ –ò–ù–ù", callback_data: cb("eva:inn:input") }
            ],
            [
                { text: "–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫", callback_data: cb("eva:inn:history") }
            ],
            [
                { text: "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ CRM", callback_data: cb("eva:inn:to_crm") }
            ],
            [
                { text: "‚Üê –ù–∞–∑–∞–¥", callback_data: cb("eva:home") }
            ]
        ]
    };
}

// Billing submenu
function getBillingMenu() {
    return {
        inline_keyboard: [
            [
                { text: "–í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á—ë—Ç", callback_data: cb("eva:bill:new") }
            ],
            [
                { text: "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ç", callback_data: cb("eva:act:new") }
            ],
            [
                { text: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ e-mail", callback_data: cb("eva:bill:send") }
            ],
            [
                { text: "‚Üê –ù–∞–∑–∞–¥", callback_data: cb("eva:home") }
            ]
        ]
    };
}

// Reports submenu
function getReportsMenu() {
    return {
        inline_keyboard: [
            [
                { text: "–í —Ä–∞–±–æ—Ç–µ", callback_data: cb("eva:reports:open") }
            ],
            [
                { text: "–ó–∞–≤–µ—Ä—à–µ–Ω–æ", callback_data: cb("eva:reports:done") }
            ],
            [
                { text: "–û—à–∏–±–∫–∏/–∏—Å–∫–ª—é—á–µ–Ω–∏—è", callback_data: cb("eva:reports:errors") }
            ],
            [
                { text: "‚Üê –ù–∞–∑–∞–¥", callback_data: cb("eva:home") }
            ]
        ]
    };
}

// Settings submenu
function getSettingsMenu() {
    return {
        inline_keyboard: [
            [
                { text: "–§–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (DOCX/PDF)", callback_data: cb("eva:settings:fmt") }
            ],
            [
                { text: "–ü–æ–¥–ø–∏—Å–∏/—Ä–µ–∫–≤–∏–∑–∏—Ç—ã", callback_data: cb("eva:settings:sign") }
            ],
            [
                { text: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (Bitrix24, DaData)", callback_data: cb("eva:settings:int") }
            ],
            [
                { text: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data: cb("eva:settings:notif") }
            ],
            [
                { text: "‚Üê –ù–∞–∑–∞–¥", callback_data: cb("eva:home") }
            ]
        ]
    };
}

// Help submenu
function getHelpMenu() {
    return {
        inline_keyboard: [
            [
                { text: "–ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä", callback_data: cb("eva:help:upload") }
            ],
            [
                { text: "–¢–µ–≥–∏ –∏ –∫–æ–º–∞–Ω–¥—ã", callback_data: cb("eva:help:cmds") }
            ],
            [
                { text: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", url: "https://t.me/everest_support" }
            ],
            [
                { text: "‚Üê –ù–∞–∑–∞–¥", callback_data: cb("eva:home") }
            ]
        ]
    };
}

// INN validation (official algorithm)
function validateINN(inn) {
    if (!inn || typeof inn !== 'string' || !/^\d+$/.test(inn)) {
        return { valid: false, error: "—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã" };
    }

    if (inn.length === 10) {
        // Legal entity: one control digit
        const coeff = [2, 4, 10, 3, 5, 9, 4, 6, 8];
        const ctrl = coeff.reduce((sum, c, i) => sum + parseInt(inn[i]) * c, 0) % 11 % 10;
        const valid = ctrl === parseInt(inn[9]);
        return { valid, error: valid ? null : "–æ—à–∏–±–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ (10)" };
    } else if (inn.length === 12) {
        // Individual: two control digits
        const coeff1 = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8];
        const coeff2 = [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8];
        
        const n11 = coeff1.reduce((sum, c, i) => sum + parseInt(inn[i]) * c, 0) % 11 % 10;
        const n12 = coeff2.reduce((sum, c, i) => sum + parseInt(inn[i]) * c, 0) % 11 % 10;
        
        const valid = n11 === parseInt(inn[10]) && n12 === parseInt(inn[11]);
        return { valid, error: valid ? null : "–æ—à–∏–±–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª (12)" };
    } else {
        return { valid: false, error: "–¥–ª–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 10 (—é—Ä–ª–∏—Ü–æ) –∏–ª–∏ 12 (–§–õ/–ò–ü)" };
    }
}

// Deep linking support
function parseDeepLink(startParam) {
    if (!startParam) return null;
    
    try {
        // Handle base64url encoded payloads
        const decoded = Buffer.from(startParam, 'base64url').toString('utf-8');
        return decoded;
    } catch {
        // Handle plain text payloads
        return startParam;
    }
}

function handleDeepLink(payload) {
    if (payload.startsWith('inn_')) {
        const inn = payload.replace('inn_', '');
        return { action: 'inn_check', data: inn };
    }
    
    if (payload === 'pkg_wizard') {
        return { action: 'pkg_wizard', data: null };
    }
    
    return null;
}

// Router for callback queries
function routeCallback(callbackData) {
    const parts = callbackData.split(':');
    if (parts.length < 3 || parts[0] !== 'eva') {
        return null;
    }
    
    const [prefix, module, action, ...params] = parts;
    return { module, action, params: params.join(':') };
}

module.exports = {
    cb,
    getMainMenu,
    getContractsMenu,
    getEverestPackageMenu,
    getINNMenu,
    getBillingMenu,
    getReportsMenu,
    getSettingsMenu,
    getHelpMenu,
    validateINN,
    parseDeepLink,
    handleDeepLink,
    routeCallback
};

