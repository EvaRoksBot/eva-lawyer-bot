const OpenAI = require('openai');
const menus = require('./modules/menus');

// Initialize OpenAI with robust error handling
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
  timeout: 45000, // 45 seconds timeout
  maxRetries: 5,  // More retries for stability
});

// Telegram Bot Token with validation
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

// Validate token format
function validateBotToken(token) {
  if (!token) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN is not set');
    return false;
  }
  
  // Basic token format validation (should be like: 123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11)
  const tokenPattern = /^\d{8,10}:[A-Za-z0-9_-]{35}$/;
  if (!tokenPattern.test(token)) {
    console.error('‚ùå Invalid TELEGRAM_BOT_TOKEN format');
    return false;
  }
  
  return true;
}

// Legal prompts for specialized responses
const LEGAL_PROMPTS = {
  'contract_analysis': {
    name: '–ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–æ–≤',
    systemPrompt: `–í—ã - –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç-—ç–∫—Å–ø–µ—Ä—Ç –ø–æ –¥–æ–≥–æ–≤–æ—Ä–Ω–æ–º—É –ø—Ä–∞–≤—É –≤ –†–æ—Å—Å–∏–∏. 

–í–∞—à–∞ –∑–∞–¥–∞—á–∞:
- –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä—ã –∏ –≤—ã—è–≤–ª—è—Ç—å —Ä–∏—Å–∫–∏
- –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —É–ª—É—á—à–µ–Ω–∏—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫
- –û–±—ä—è—Å–Ω—è—Ç—å –ø—Ä–∞–≤–æ–≤—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è —É—Å–ª–æ–≤–∏–π
- –°—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ

–°—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞:
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ –ø—É–Ω–∫—Ç–∞–º
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –£–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã
- –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫

–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –æ—Ç–≤–µ—Ç —Å: "üìÑ <b>–ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞</b>"`
  },
  
  'corporate_law': {
    name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ',
    systemPrompt: `–í—ã - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º—É –ø—Ä–∞–≤—É –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞ –≤ –†–æ—Å—Å–∏–∏.

–í–∞—à–∞ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞:
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –û–û–û, –ò–ü, –ê–û
- –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
- –†–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ –ª–∏–∫–≤–∏–¥–∞—Ü–∏—è
- –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Ä—ã
- –ù–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞

–û—Ç–≤–µ—á–∞–π—Ç–µ:
- –° —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ä–æ–∫–æ–≤ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
- –°–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç—ã
- –° –ø–æ—à–∞–≥–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
- –° –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏ –æ —Ä–∏—Å–∫–∞—Ö

–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –æ—Ç–≤–µ—Ç —Å: "üè¢ <b>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ</b>"`
  },
  
  'labor_law': {
    name: '–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ',
    systemPrompt: `–í—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç—Ä—É–¥–æ–≤–æ–º—É –ø—Ä–∞–≤—É –†–æ—Å—Å–∏–∏.

–í–∞—à–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏:
- –¢—Ä—É–¥–æ–≤—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã –∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è
- –ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ –∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏
- –¢—Ä—É–¥–æ–≤—ã–µ —Å–ø–æ—Ä—ã –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
- –ü—Ä–∞–≤–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π
- –û—Ö—Ä–∞–Ω–∞ —Ç—Ä—É–¥–∞

–î–∞–≤–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—ã:
- –°–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –¢–ö –†–§
- –° –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏
- –° —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ä–æ–∫–æ–≤ –æ–±—Ä–∞—â–µ–Ω–∏—è
- –° –æ–±—Ä–∞–∑—Ü–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –æ—Ç–≤–µ—Ç —Å: "üíº <b>–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ</b>"`
  },
  
  'real_estate': {
    name: '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
    systemPrompt: `–í—ã - —é—Ä–∏—Å—Ç –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –†–æ—Å—Å–∏–∏.

–í–∞—à–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:
- –ö—É–ø–ª—è-–ø—Ä–æ–¥–∞–∂–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
- –ò–ø–æ—Ç–µ–∫–∞ –∏ –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–µ
- –ê—Ä–µ–Ω–¥–∞ –∏ –Ω–∞–π–º
- –ü—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏—è
- –ó–µ–º–µ–ª—å–Ω–æ–µ –ø—Ä–∞–≤–æ

–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ:
- –° —É—á–µ—Ç–æ–º —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π
- –° –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- –° —Ä–∞—Å—á–µ—Ç–æ–º –Ω–∞–ª–æ–≥–æ–≤ –∏ —Å–±–æ—Ä–æ–≤
- –° –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ —Ä–∏—Å–∫–∞—Ö

–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –æ—Ç–≤–µ—Ç —Å: "üè† <b>–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</b>"`
  },
  
  'family_law': {
    name: '–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ',
    systemPrompt: `–í—ã - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–µ–º–µ–π–Ω–æ–º—É –ø—Ä–∞–≤—É –†–æ—Å—Å–∏–∏.

–í–∞—à–∏ –æ–±–ª–∞—Å—Ç–∏:
- –†–∞–∑–≤–æ–¥ –∏ —Ä–∞–∑–¥–µ–ª –∏–º—É—â–µ—Å—Ç–≤–∞
- –ê–ª–∏–º–µ–Ω—Ç—ã –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
- –û–ø–µ–∫–∞ –∏ –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å—Ç–≤–æ
- –£—Å—ã–Ω–æ–≤–ª–µ–Ω–∏–µ
- –ë—Ä–∞—á–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã

–ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ:
- –î–µ–ª–∏–∫–∞—Ç–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
- –° —É—á–µ—Ç–æ–º –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –¥–µ—Ç–µ–π
- –°–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –°–ö –†–§
- –° –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏

–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –æ—Ç–≤–µ—Ç —Å: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ</b>"`
  },
  
  'general': {
    name: '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã',
    systemPrompt: `–í—ã - Eva, AI-–ø–æ–º–æ—â–Ω–∏–∫ —é—Ä–∏—Å—Ç–∞, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º –ø—Ä–∞–≤–µ.

–í–∞—à–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
- –î–∞–≤–∞—Ç—å —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É
- –û–±—ä—è—Å–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º
- –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å –æ —Ä–∏—Å–∫–∞—Ö –∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö
- –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –°—Å—ã–ª–∫–∏ –Ω–∞ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç—ã

–í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –æ—Ç–≤–µ—Ç —Å: "‚öñÔ∏è <b>Eva Lawyer Bot</b>"`
  }
};

// Enhanced error handling for API calls with exponential backoff
async function makeAPICall(apiFunction, maxRetries = 5, baseDelay = 1000) {
  for (let attempt = 1; attempt <= maxRetries; attempt++) {
    try {
      return await apiFunction();
    } catch (error) {
      console.error(`‚ùå API call attempt ${attempt}/${maxRetries} failed:`, error.message);
      
      if (attempt === maxRetries) {
        throw error;
      }
      
      // Exponential backoff with jitter
      const delay = baseDelay * Math.pow(2, attempt - 1) + Math.random() * 1000;
      console.log(`‚è≥ Retrying in ${Math.round(delay)}ms...`);
      await new Promise(resolve => setTimeout(resolve, delay));
    }
  }
}

// Send message to Telegram with comprehensive error handling
async function sendMessage(chatId, text, keyboard = null) {
  if (!validateBotToken(TELEGRAM_BOT_TOKEN)) {
    throw new Error('Invalid or missing Telegram Bot Token');
  }

  return makeAPICall(async () => {
    const response = await fetch(`${TELEGRAM_API_URL}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML',
        reply_markup: keyboard
      }),
    });
    
    const result = await response.json();
    
    if (!result.ok) {
      // Handle specific Telegram API errors
      if (result.error_code === 401) {
        throw new Error(`Telegram API Unauthorized - Invalid bot token`);
      } else if (result.error_code === 429) {
        throw new Error(`Telegram API Rate Limited - ${result.description}`);
      } else if (result.error_code === 400) {
        throw new Error(`Telegram API Bad Request - ${result.description}`);
      }
      throw new Error(`Telegram API error: ${result.description}`);
    }
    
    return result;
  }, 3, 2000); // 3 retries with 2 second base delay
}

// Edit message with comprehensive error handling
async function editMessage(chatId, messageId, text, keyboard = null) {
  if (!validateBotToken(TELEGRAM_BOT_TOKEN)) {
    throw new Error('Invalid or missing Telegram Bot Token');
  }

  return makeAPICall(async () => {
    const response = await fetch(`${TELEGRAM_API_URL}/editMessageText`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        message_id: messageId,
        text: text,
        parse_mode: 'HTML',
        reply_markup: keyboard
      }),
    });
    
    const result = await response.json();
    
    if (!result.ok) {
      // Handle message not modified error (common and not critical)
      if (result.error_code === 400 && result.description.includes('message is not modified')) {
        console.log('‚ö†Ô∏è Message content is the same, skipping edit');
        return result;
      }
      
      if (result.error_code === 401) {
        throw new Error(`Telegram API Unauthorized - Invalid bot token`);
      }
      throw new Error(`Telegram edit error: ${result.description}`);
    }
    
    return result;
  }, 3, 1500);
}

// Answer callback query with error handling
async function answerCallbackQuery(callbackQueryId, text = '') {
  if (!validateBotToken(TELEGRAM_BOT_TOKEN)) {
    console.error('‚ùå Cannot answer callback query - invalid token');
    return null;
  }

  try {
    const response = await fetch(`${TELEGRAM_API_URL}/answerCallbackQuery`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        callback_query_id: callbackQueryId,
        text: text
      }),
    });
    
    const result = await response.json();
    if (!result.ok) {
      console.error('‚ùå Answer callback error:', result.description);
    }
    return result;
  } catch (error) {
    console.error('‚ùå Answer callback error:', error);
    return null;
  }
}

// Check if text is INN (Russian tax number)
function isINN(text) {
  const innPattern = /^\d{10}$|^\d{12}$/;
  return innPattern.test(text.trim());
}

// Get AI response with enhanced error handling and multiple fallback layers
async function getAIResponse(message, promptType = 'general') {
  try {
    const prompt = LEGAL_PROMPTS[promptType] || LEGAL_PROMPTS['general'];
    
    console.log(`ü§ñ Getting AI response for prompt type: ${promptType}`);
    
    const response = await makeAPICall(async () => {
      return await openai.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [
          {
            role: "system",
            content: prompt.systemPrompt
          },
          {
            role: "user",
            content: message
          }
        ],
        max_tokens: 2500,
        temperature: 0.7,
      });
    }, 5, 2000); // 5 retries with 2 second base delay

    return response.choices[0].message.content;
    
  } catch (error) {
    console.error('‚ùå OpenAI API error:', error);
    
    // Enhanced fallback responses based on prompt type
    const fallbackResponses = {
      'contract_analysis': `üìÑ <b>–ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞</b>

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

<b>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —é—Ä–∏—Å—Ç—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∏–ø–æ–≤—ã–µ —Ñ–æ—Ä–º—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:</b>
‚Ä¢ –ü—Ä–µ–¥–º–µ—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –µ–≥–æ —Ü–µ–Ω–∞
‚Ä¢ –°—Ä–æ–∫–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤
‚Ä¢ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω
‚Ä¢ –ü–æ—Ä—è–¥–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–ø–æ—Ä–æ–≤

<i>üí° –†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —é—Ä–∏—Å—Ç–∞.</i>`,

      'corporate_law': `üè¢ <b>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ</b>

–°–µ—Ä–≤–∏—Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

<b>–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å:</b>
‚Ä¢ –í –ú–§–¶ –∏–ª–∏ –Ω–∞–ª–æ–≥–æ–≤—É—é –∏–Ω—Å–ø–µ–∫—Ü–∏—é
‚Ä¢ –ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º —Ñ–∏—Ä–º–∞–º
‚Ä¢ –ù–∞ –ø–æ—Ä—Ç–∞–ª –≥–æ—Å—É—Å–ª—É–≥

<b>–ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:</b>
‚Ä¢ nalog.gov.ru - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –§–ù–°
‚Ä¢ gosuslugi.ru - –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏
‚Ä¢ consultant.ru - –ø—Ä–∞–≤–æ–≤–∞—è –±–∞–∑–∞

<i>üí° –ü—Ä–∏ —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.</i>`,

      'labor_law': `üíº <b>–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ</b>

–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ç—Ä—É–¥–æ–≤–æ–º—É –ø—Ä–∞–≤—É –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.

<b>–ü—Ä–∏ —Ç—Ä—É–¥–æ–≤—ã—Ö —Å–ø–æ—Ä–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:</b>
‚Ä¢ –í —Ç—Ä—É–¥–æ–≤—É—é –∏–Ω—Å–ø–µ–∫—Ü–∏—é
‚Ä¢ –í –∫–æ–º–∏—Å—Å–∏—é –ø–æ —Ç—Ä—É–¥–æ–≤—ã–º —Å–ø–æ—Ä–∞–º
‚Ä¢ –ö —é—Ä–∏—Å—Ç—É –ø–æ —Ç—Ä—É–¥–æ–≤–æ–º—É –ø—Ä–∞–≤—É

<b>–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</b>
‚Ä¢ –†–æ—Å—Ç—Ä—É–¥: rostrud.gov.ru
‚Ä¢ –ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è: 8-800-707-88-41
‚Ä¢ –ü—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–∞ (–ø—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö)

<i>üí° –ù–µ –∑–∞—Ç—è–≥–∏–≤–∞–π—Ç–µ —Å –æ–±—Ä–∞—â–µ–Ω–∏–µ–º - –µ—Å—Ç—å —Å—Ä–æ–∫–∏ –¥–∞–≤–Ω–æ—Å—Ç–∏.</i>`,

      'real_estate': `üè† <b>–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</b>

–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.

<b>–î–ª—è —Å–¥–µ–ª–æ–∫ —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é:</b>
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∏–µ–ª—Ç–æ—Ä—É –∏–ª–∏ —é—Ä–∏—Å—Ç—É
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –†–æ—Å—Ä–µ–µ—Å—Ç—Ä–µ
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Å–ø—Ä–∞–≤–∫–∏ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ–±—Ä–µ–º–µ–Ω–µ–Ω–∏–π

<b>–ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:</b>
‚Ä¢ rosreestr.gov.ru - –†–æ—Å—Ä–µ–µ—Å—Ç—Ä
‚Ä¢ egrn.rosreestr.gov.ru - –≤—ã–ø–∏—Å–∫–∏ –ï–ì–†–ù
‚Ä¢ –ù–æ—Ç–∞—Ä–∏–∞–ª—å–Ω—ã–µ –ø–∞–ª–∞—Ç—ã —Ä–µ–≥–∏–æ–Ω–æ–≤

<i>üí° –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞.</i>`,

      'family_law': `üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ</b>

–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Å–µ–º–µ–π–Ω–æ–º—É –ø—Ä–∞–≤—É –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.

<b>–ü—Ä–∏ —Å–µ–º–µ–π–Ω—ã—Ö —Å–ø–æ—Ä–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:</b>
‚Ä¢ –ö —Å–µ–º–µ–π–Ω–æ–º—É —é—Ä–∏—Å—Ç—É
‚Ä¢ –í –æ—Ä–≥–∞–Ω—ã –æ–ø–µ–∫–∏ (–≤–æ–ø—Ä–æ—Å—ã –¥–µ—Ç–µ–π)
‚Ä¢ –í –ó–ê–ì–° (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–∫—Ç–æ–≤)

<b>–í–∞–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</b>
‚Ä¢ –ú–∏—Ä–æ–≤—ã–µ —Å—É–¥—å–∏ (—Ä–∞–∑–≤–æ–¥, –∞–ª–∏–º–µ–Ω—Ç—ã)
‚Ä¢ –û—Ä–≥–∞–Ω—ã –æ–ø–µ–∫–∏ –∏ –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å—Ç–≤–∞
‚Ä¢ –¶–µ–Ω—Ç—Ä—ã —Å–µ–º–µ–π–Ω–æ–≥–æ –ø—Ä–∞–≤–∞

<i>üí° –í –≤–æ–ø—Ä–æ—Å–∞—Ö, –∫–∞—Å–∞—é—â–∏—Ö—Å—è –¥–µ—Ç–µ–π, –¥–µ–π—Å—Ç–≤—É–π—Ç–µ –≤ –∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö.</i>`,

      'general': `‚öñÔ∏è <b>Eva Lawyer Bot</b>

–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.

<b>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</b>
‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ–∑–∂–µ
‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —É —é—Ä–∏—Å—Ç–∞

<b>–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</b>
‚Ä¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å: 8-800-700-18-00
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ü–ª—é—Å: consultant.ru
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç: garant.ru

<b>–ü—Ä–∏ —Å—Ä–æ—á–Ω—ã—Ö –ø—Ä–∞–≤–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö:</b>
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–º—É —é—Ä–∏—Å—Ç—É
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏
‚Ä¢ –ò–∑—É—á–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ

<i>üí° –î–∞–Ω–Ω—ã–π –±–æ—Ç –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å.</i>`
    };
    
    return fallbackResponses[promptType] || fallbackResponses['general'];
  }
}

// Import DaData module with error handling
let dadata;
try {
  dadata = require('./modules/dadata');
} catch (error) {
  console.error('‚ö†Ô∏è DaData module not found, using fallback');
  dadata = null;
}

// Handle counterparty check by INN with enhanced error handling
async function handleCounterpartyCheck(inn) {
  try {
    console.log(`üîç Checking counterparty with INN: ${inn}`);
    
    // Try DaData API first if available
    if (dadata) {
      try {
        const dadataResult = await dadata.checkCounterparty(inn);
        
        if (dadataResult && dadataResult.success) {
          return dadataResult.response;
        }
      } catch (dadataError) {
        console.error('‚ùå DaData API error:', dadataError.message);
      }
    }
    
    // Fallback to AI analysis
    console.log('üìù Using AI fallback for INN analysis');
    const aiResponse = await getAIResponse(
      `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ò–ù–ù ${inn}. –û–±—ä—è—Å–Ω–∏—Ç–µ, —á—Ç–æ —ç—Ç–æ –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è, –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—ë –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ –∫–∞–∫–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∏—Å–∫–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –Ω–µ–π. –î–∞–π—Ç–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞.`,
      'general'
    );
    
    return `üîç <b>–ê–Ω–∞–ª–∏–∑ –ò–ù–ù ${inn}</b>\n\n${aiResponse}\n\n<i>üí° –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: –§–ù–°, –ï–ì–†–Æ–õ/–ï–ì–†–ò–ü, DaData.</i>`;
    
  } catch (error) {
    console.error('‚ùå Counterparty check error:', error);
    return `‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ò–ù–ù ${inn}</b>\n\n<b>–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤.</b>\n\n<b>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Ä–µ–∑:</b>\n‚Ä¢ –°–∞–π—Ç –§–ù–° –†–æ—Å—Å–∏–∏ (nalog.gov.ru)\n‚Ä¢ –°–µ—Ä–≤–∏—Å –ï–ì–†–Æ–õ/–ï–ì–†–ò–ü\n‚Ä¢ –ü–æ—Ä—Ç–∞–ª DaData\n‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —é—Ä–∏—Å—Ç–æ–º\n\n<i>üí° –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –Ω–æ–≤—ã–º–∏ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞–º–∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É.</i>`;
  }
}

// Determine prompt type based on message content with enhanced detection
function determinePromptType(message) {
  const lowerMessage = message.toLowerCase();
  
  // Contract analysis keywords
  if (lowerMessage.includes('–¥–æ–≥–æ–≤–æ—Ä') || lowerMessage.includes('–∫–æ–Ω—Ç—Ä–∞–∫—Ç') || 
      lowerMessage.includes('—Å–æ–≥–ª–∞—à–µ–Ω–∏–µ') || lowerMessage.includes('—É—Å–ª–æ–≤–∏—è') ||
      lowerMessage.includes('–ø—É–Ω–∫—Ç') || lowerMessage.includes('—Å—Ç–∞—Ç—å—è')) {
    return 'contract_analysis';
  }
  
  // Corporate law keywords
  if (lowerMessage.includes('–æ–æ–æ') || lowerMessage.includes('—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è') || 
      lowerMessage.includes('–±–∏–∑–Ω–µ—Å') || lowerMessage.includes('–∏–ø') ||
      lowerMessage.includes('–Ω–∞–ª–æ–≥') || lowerMessage.includes('—É—á—Ä–µ–¥–∏—Ç–µ–ª—å') ||
      lowerMessage.includes('—É—Å—Ç–∞–≤') || lowerMessage.includes('–¥–∏—Ä–µ–∫—Ç–æ—Ä')) {
    return 'corporate_law';
  }
  
  // Labor law keywords
  if (lowerMessage.includes('—Ä–∞–±–æ—Ç–∞') || lowerMessage.includes('—É–≤–æ–ª—å–Ω–µ–Ω–∏–µ') || 
      lowerMessage.includes('–∑–∞—Ä–ø–ª–∞—Ç–∞') || lowerMessage.includes('—Ç—Ä—É–¥–æ–≤–æ–π') ||
      lowerMessage.includes('–æ—Ç–ø—É—Å–∫') || lowerMessage.includes('–±–æ–ª—å–Ω–∏—á–Ω—ã–π') ||
      lowerMessage.includes('—Å–æ—Ç—Ä—É–¥–Ω–∏–∫') || lowerMessage.includes('—Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å')) {
    return 'labor_law';
  }
  
  // Real estate keywords
  if (lowerMessage.includes('–∫–≤–∞—Ä—Ç–∏—Ä–∞') || lowerMessage.includes('–¥–æ–º') || 
      lowerMessage.includes('–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å') || lowerMessage.includes('–∞—Ä–µ–Ω–¥–∞') ||
      lowerMessage.includes('–ø–æ–∫—É–ø–∫–∞') || lowerMessage.includes('–ø—Ä–æ–¥–∞–∂–∞') ||
      lowerMessage.includes('–∏–ø–æ—Ç–µ–∫–∞') || lowerMessage.includes('–∑–µ–º–ª—è')) {
    return 'real_estate';
  }
  
  // Family law keywords
  if (lowerMessage.includes('—Ä–∞–∑–≤–æ–¥') || lowerMessage.includes('–∞–ª–∏–º–µ–Ω—Ç—ã') || 
      lowerMessage.includes('—Å–µ–º—å—è') || lowerMessage.includes('–±—Ä–∞–∫') ||
      lowerMessage.includes('—Ä–µ–±–µ–Ω–æ–∫') || lowerMessage.includes('–æ–ø–µ–∫–∞') ||
      lowerMessage.includes('–Ω–∞—Å–ª–µ–¥—Å—Ç–≤–æ') || lowerMessage.includes('–∑–∞–≤–µ—â–∞–Ω–∏–µ')) {
    return 'family_law';
  }
  
  return 'general';
}

// Main handler function with comprehensive error handling
module.exports = async (req, res) => {
  // Set CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, GET, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, X-Telegram-Bot-Api-Secret-Token');

  if (req.method === 'OPTIONS') {
    return res.status(200).json({ ok: true });
  }

  if (req.method === 'GET') {
    const tokenStatus = validateBotToken(TELEGRAM_BOT_TOKEN) ? 'valid' : 'invalid';
    return res.status(200).json({
      status: 'ok',
      message: 'Eva Lawyer Bot Ultimate API is running',
      timestamp: new Date().toISOString(),
      token_status: tokenStatus,
      features: [
        'Ultimate Error Handling',
        'Token Validation',
        'Exponential Backoff',
        'Multi-layer Fallbacks',
        'Enhanced Retry Logic',
        'Comprehensive Logging',
        'Interactive Menus',
        'Specialized Prompts',
        'INN Checking',
        'DaData Integration'
      ]
    });
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    // Validate bot token before processing
    if (!validateBotToken(TELEGRAM_BOT_TOKEN)) {
      console.error('‚ùå Invalid bot token, cannot process webhook');
      return res.status(500).json({ 
        error: 'Bot configuration error',
        message: 'Invalid or missing Telegram Bot Token'
      });
    }

    const update = req.body;
    console.log('üì® Received update:', JSON.stringify(update, null, 2));

    // Handle callback queries (menu buttons)
    if (update.callback_query) {
      const callbackQuery = update.callback_query;
      const chatId = callbackQuery.message.chat.id;
      const messageId = callbackQuery.message.message_id;
      const data = callbackQuery.data;

      console.log(`üîò Callback query: ${data}`);

      // Answer the callback query
      await answerCallbackQuery(callbackQuery.id);

      // Handle different callback actions with error handling
      try {
        switch (data) {
          case 'contract_analysis':
            await editMessage(chatId, messageId, 
              'üìÑ <b>–ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–æ–≤</b>\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ –∏–ª–∏ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é, –∏ —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é:\n\n‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∏—Å–∫–∏ –∏ –ø—Ä–æ–±–ª–µ–º—ã\n‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É\n‚Ä¢ –ó–∞—â–∏—Ç–∞ –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤\n\n<i>üí° –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ª—É—á—à–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–æ–≥–æ–≤–æ—Ä–∞.</i>',
              menus.getBackToMainMenu()
            );
            break;

          case 'counterparty_check':
            await editMessage(chatId, messageId,
              'üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞</b>\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä), –∏ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é:\n\n‚Ä¢ –ü–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n‚Ä¢ –û—Ü–µ–Ω–∫—É —Ä–∏—Å–∫–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞\n‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–±–æ—Ç–µ\n\n<i>üí° –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–µ—Ç–æ–≤ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ.</i>',
              menus.getBackToMainMenu()
            );
            break;

          case 'legal_letter':
            await editMessage(chatId, messageId,
              'üì¨ <b>–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –ø–∏—Å—å–º–∞</b>\n\n–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é, –∏ —è –ø–æ–º–æ–≥—É —Å–æ—Å—Ç–∞–≤–∏—Ç—å:\n\n‚Ä¢ –û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–µ—Ç–µ–Ω–∑–∏—é\n‚Ä¢ –î–µ–ª–æ–≤–æ–µ –ø–∏—Å—å–º–æ\n‚Ä¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ\n‚Ä¢ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å\n‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\n\n<i>üí° –£–∫–∞–∂–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ —Å–∏—Ç—É–∞—Ü–∏–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞.</i>',
              menus.getBackToMainMenu()
            );
            break;

          case 'templates':
            await editMessage(chatId, messageId,
              'üìë <b>–®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞:',
              menus.getTemplatesMenu()
            );
            break;

          case 'more_options':
            await editMessage(chatId, messageId,
              '‚ûï <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –ø—Ä–∞–≤–∞:',
              menus.getMoreOptionsMenu()
            );
            break;

          case 'back_to_main':
            await editMessage(chatId, messageId,
              '‚öñÔ∏è <b>Eva Lawyer Bot</b>\n\n–í–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –ø—Ä–∞–≤—É\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é:',
              menus.getMainMenu()
            );
            break;

          // Template options
          case 'contract_template':
            await editMessage(chatId, messageId,
              'üìÑ <b>–®–∞–±–ª–æ–Ω—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤</b>\n\n–û–ø–∏—à–∏—Ç–µ —Ç–∏–ø –¥–æ–≥–æ–≤–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –Ω—É–∂–µ–Ω:\n\n‚Ä¢ –î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏\n‚Ä¢ –î–æ–≥–æ–≤–æ—Ä —É—Å–ª—É–≥\n‚Ä¢ –î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã\n‚Ä¢ –¢—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä\n‚Ä¢ –î–æ–≥–æ–≤–æ—Ä –ø–æ–¥—Ä—è–¥–∞\n\n<i>üí° –£–∫–∞–∂–∏—Ç–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≤–∞—à–µ–π —Å—Ñ–µ—Ä—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞.</i>',
              menus.getBackToMainMenu()
            );
            break;

          case 'claim_template':
            await editMessage(chatId, messageId,
              'üìã <b>–®–∞–±–ª–æ–Ω—ã –ø—Ä–µ—Ç–µ–Ω–∑–∏–π</b>\n\n–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏:\n\n‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞\n‚Ä¢ –ù–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã/—É—Å–ª—É–≥–∏\n‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π\n‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤\n\n<i>üí° –ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—à–µ—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –±—É–¥–µ—Ç –ø—Ä–µ—Ç–µ–Ω–∑–∏—è.</i>',
              menus.getBackToMainMenu()
            );
            break;

          // Legal areas
          case 'corporate_law':
            await editMessage(chatId, messageId,
              'üè¢ <b>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ</b>\n\n–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ:\n\n‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –û–û–û, –ò–ü, –ê–û\n‚Ä¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö\n‚Ä¢ –ù–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–∏ –±–∏–∑–Ω–µ—Å–∞\n‚Ä¢ –†–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–π\n‚Ä¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–ø–æ—Ä–∞—Ö\n\n<i>üí° –£–∫–∞–∂–∏—Ç–µ —Ñ–æ—Ä–º—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ä–µ–≥–∏–æ–Ω –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.</i>',
              menus.getBackToMainMenu()
            );
            break;

          case 'labor_law':
            await editMessage(chatId, messageId,
              'üíº <b>–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ</b>\n\n–í–æ–ø—Ä–æ—Å—ã –ø–æ:\n\n‚Ä¢ –¢—Ä—É–¥–æ–≤—ã–º –¥–æ–≥–æ–≤–æ—Ä–∞–º\n‚Ä¢ –£–≤–æ–ª—å–Ω–µ–Ω–∏—è–º –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è–º\n‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç–µ\n‚Ä¢ –û—Ç–ø—É—Å–∫–∞–º –∏ –±–æ–ª—å–Ω–∏—á–Ω—ã–º\n‚Ä¢ –¢—Ä—É–¥–æ–≤—ã–º —Å–ø–æ—Ä–∞–º\n\n<i>üí° –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.</i>',
              menus.getBackToMainMenu()
            );
            break;

          case 'real_estate':
            await editMessage(chatId, messageId,
              'üè† <b>–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</b>\n\n–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ:\n\n‚Ä¢ –ü–æ–∫—É–ø–∫–µ –∏ –ø—Ä–æ–¥–∞–∂–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏\n‚Ä¢ –ò–ø–æ—Ç–µ—á–Ω—ã–º —Å–¥–µ–ª–∫–∞–º\n‚Ä¢ –ê—Ä–µ–Ω–¥–µ –∏ –Ω–∞–π–º—É\n‚Ä¢ –ó–µ–º–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º\n‚Ä¢ –ü—Ä–∏–≤–∞—Ç–∏–∑–∞—Ü–∏–∏\n\n<i>üí° –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏ —Ä–µ–≥–∏–æ–Ω –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.</i>',
              menus.getBackToMainMenu()
            );
            break;

          case 'family_law':
            await editMessage(chatId, messageId,
              'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ</b>\n\n–í–æ–ø—Ä–æ—Å—ã –ø–æ:\n\n‚Ä¢ –†–∞–∑–≤–æ–¥—É –∏ —Ä–∞–∑–¥–µ–ª—É –∏–º—É—â–µ—Å—Ç–≤–∞\n‚Ä¢ –ê–ª–∏–º–µ–Ω—Ç–∞–º –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é\n‚Ä¢ –û–ø–µ–∫–µ –∏ –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å—Ç–≤—É\n‚Ä¢ –£—Å—ã–Ω–æ–≤–ª–µ–Ω–∏—é\n‚Ä¢ –ë—Ä–∞—á–Ω—ã–º –¥–æ–≥–æ–≤–æ—Ä–∞–º\n\n<i>üí° –î–µ–ª–∏–∫–∞—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ.</i>',
              menus.getBackToMainMenu()
            );
            break;

          default:
            await editMessage(chatId, messageId,
              '‚ùì <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º.',
              menus.getMainMenu()
            );
        }
      } catch (editError) {
        console.error('‚ùå Error editing message:', editError);
        // Try sending a new message if editing fails
        try {
          await sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', menus.getMainMenu());
        } catch (sendError) {
          console.error('‚ùå Error sending fallback message:', sendError);
        }
      }

      return res.status(200).json({ ok: true });
    }

    // Handle regular messages
    if (update.message) {
      const message = update.message;
      const chatId = message.chat.id;
      const text = message.text || '';
      const userName = message.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

      console.log(`üí¨ Processing message from ${userName}: ${text}`);

      // Handle /start command
      if (text === '/start') {
        try {
          await sendMessage(chatId, 
            `üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userName}!</b>\n\n‚öñÔ∏è <b>Eva Lawyer Bot</b>\n\n–í–∞—à AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –ø—Ä–∞–≤—É\n\n<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n‚Ä¢ –ê–Ω–∞–ª–∏–∑ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤ –ø–æ –ò–ù–ù\n‚Ä¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n‚Ä¢ –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Å–µ–º –∏ –ø—Ä–µ—Ç–µ–Ω–∑–∏–π\n‚Ä¢ –®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é:`,
            menus.getMainMenu()
          );
        } catch (sendError) {
          console.error('‚ùå Error sending start message:', sendError);
          // Fallback without menu
          try {
            await sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø Eva Lawyer Bot - –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –ø—Ä–∞–≤—É. –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –ø—Ä–∞–≤–æ–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å.`);
          } catch (fallbackError) {
            console.error('‚ùå Error sending fallback start message:', fallbackError);
          }
        }
        return res.status(200).json({ ok: true });
      }

      // Check if message is INN
      if (isINN(text)) {
        try {
          const checkResult = await handleCounterpartyCheck(text);
          await sendMessage(chatId, checkResult, menus.getMainMenu());
        } catch (innError) {
          console.error('‚ùå Error checking INN:', innError);
          try {
            await sendMessage(chatId, `‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ò–ù–ù ${text}</b>\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.\n\n<i>üí° –ú–æ–∂–µ—Ç–µ —Ç–∞–∫–∂–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ.</i>`);
          } catch (fallbackError) {
            console.error('‚ùå Error sending INN error message:', fallbackError);
          }
        }
        return res.status(200).json({ ok: true });
      }

      // Handle regular text messages with AI
      try {
        const promptType = determinePromptType(text);
        console.log(`üéØ Determined prompt type: ${promptType}`);
        
        const aiResponse = await getAIResponse(text, promptType);
        await sendMessage(chatId, aiResponse, menus.getMainMenu());
      } catch (aiError) {
        console.error('‚ùå Error getting AI response:', aiError);
        try {
          await sendMessage(chatId, `‚ùå <b>–í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞</b>\n\n–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.\n\n<b>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</b>\n‚Ä¢ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ–∑–∂–µ\n‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n\n<i>üí° –ü—Ä–∏ —Å—Ä–æ—á–Ω—ã—Ö –ø—Ä–∞–≤–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —é—Ä–∏—Å—Ç–æ–º.</i>`);
        } catch (fallbackError) {
          console.error('‚ùå Error sending AI error message:', fallbackError);
        }
      }

      return res.status(200).json({ ok: true });
    }

    // Unknown update type
    console.log('‚ùì Unknown update type:', Object.keys(update));
    return res.status(200).json({ ok: true });

  } catch (error) {
    console.error('‚ùå Handler error:', error);
    return res.status(500).json({ 
      error: 'Internal server error',
      message: error.message,
      timestamp: new Date().toISOString()
    });
  }
};

